plugins {
    id 'java'
    id 'com.diffplug.gradle.spotless' version '4.0.1'
}

repositories {
    jcenter()
}

configurations {
    errorproneJavac
}

ext {
    parentDir = file("${rootDir}/../").absolutePath
    cfHome = "${parentDir}/checker-framework"
}

ext.versions = [
        checkerFramework: "3.7.0",
]

sourceCompatibility = 1.8

dependencies {
    implementation files('../checker-framework/checker/dist/checker-qual.jar')
    implementation files('../checker-framework/checker/dist/checker.jar')

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "org.checkerframework:framework-test:${versions.checkerFramework}"

    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}

tasks.withType(JavaCompile).all {
    options.compilerArgs.add("-Xlint:all")
}

test {
    inputs.files("tests/nullspec-common")
    if (!JavaVersion.current().java9Compatible) {
        jvmArgs "-Xbootclasspath/p:${configurations.errorproneJavac.asPath}"
    }
}

clean.doFirst {
    delete "${rootDir}/tests/build/"
}

spotless {
    java {
        googleJavaFormat()
    }
}

task ensureCheckerFrameworkBuilt() {
    description 'Clone or update the Checker Framework and then build it and all dependencies'
    if (file(cfHome).exists()) {
        exec {
            workingDir cfHome
            executable 'git'
            args = ['pull', '-q']
            ignoreExitValue = true
        }
    } else {
        exec {
            workingDir "${cfHome}/../"
            executable 'git'
            args = ['clone', '-q', 'https://github.com/jspecify/checker-framework.git']
        }
    }
    exec {
        workingDir cfHome
        executable './gradlew'
        args = ['cloneAndBuildDependencies']
    }
}
